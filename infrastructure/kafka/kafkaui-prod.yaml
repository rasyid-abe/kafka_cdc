version: "3.3"
services:
  # zookeepers -> watching for broker cluster
  zk1:
    image: confluentinc/cp-zookeeper:6.2.0
    user: "0:0"
    hostname: zk1
    container_name: zk1
    ports:
      - 22181:22181
    volumes:
      - /kafka-connect/data/zookeeper/zk1-data:/var/lib/zookeeper/data
      - /kafka-connect/data/zookeeper/zk1-txn-logs:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zk1:22888:23888
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=srvr,mntr"
    labels:
      - co.elastic.metrics/module=zookeeper
      - co.elastic.metrics/hosts=zk1:22181
      - co.elastic.metrics/metricsets=mntr,server
    restart: always
    logging:
        driver: "json-file"
        options:
            max-file: "2"
            max-size: "2048m"

  kafka1:
    image: confluentinc/cp-server:6.2.0
    user: "0:0"
    hostname: kafka1
    container_name: kafka1
    depends_on:
      - zk1
    ports:
      - 19091:19091
      - 19092:19092
      - 19093:19093
    volumes:
      - /kafka-connect/data/kafka/kafka1-data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zk1:22181
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka1:19092,LISTENER_PRIVATE://10.128.0.52:19091,LISTENER_EXTERNAL://34.101.218.44:19093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT,LISTENER_PRIVATE:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:19092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    labels:
      - co.elastic.logs/module=kafka
      - co.elastic.metrics/module=kafka
      - co.elastic.metrics/metricsets=partition,consumergroup
      - co.elastic.metrics/hosts='$${data.container.name}:19092'
    restart: always
    logging:
        driver: "json-file"
        options:
            max-file: "2"
            max-size: "2048m"

# Kafka Browser UI
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
        - "8000:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=kafka-connect-prod
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:19092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zk1:22181
      - KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME=kafka-connect
      - KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS=http://kafka-connect:8083
    logging:
        driver: "json-file"
        options:
            max-file: "2"
            max-size: "2048m"
